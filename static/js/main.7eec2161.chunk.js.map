{"version":3,"sources":["Hand.js","LeaderboardDialog.js","RoundWins.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Hand","handValue","enemyHandValue","cards","mirror","gameStatus","handValueClass","className","map","card","idx","suit","symbol","rank","Array","value","fill","_","aIdx","LeaderboardDialog","data","onClose","onClick","user","style","display","justifyContent","marginRight","name","rating","RoundWins","wins","roundsToWin","CARDS","SUITS","id","RANKS","i","push","Math","floor","getHandValue","hand","reduce","acc","next","aceCount","filter","length","hasLargeEmojis","navigator","userAgent","match","App","useState","game","setGame","userData","setUserData","leaderboardVisible","setLeaderboardVisible","leaderboardData","setLeaderboardData","player1HandValue","useMemo","player1","player2HandValue","player2","socketRef","useRef","useEffect","socket","current","io","process","on","e","emit","secret","localStorage","getItem","gameId","window","location","search","slice","leaderboard","setItem","gameState","history","replaceState","score","status","flex","deckSize","deckIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","body","background","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7eec2161.chunk.js","sourcesContent":["export default function Hand({\n  handValue,\n  enemyHandValue,\n  cards,\n  mirror,\n  gameStatus,\n}) {\n  const handValueClass = (() => {\n    if (handValue > 21) {\n      return \"hand-losing\";\n    }\n    if (enemyHandValue > 21) {\n      return \"hand-winning\";\n    }\n\n    if (handValue > enemyHandValue) {\n      return \"hand-winning\";\n    }\n    if (handValue < enemyHandValue) {\n      return \"hand-losing\";\n    }\n    return \"\";\n  })();\n\n  return (\n    <div className={\"hand \" + (mirror ? \"hand-mirror\" : \"\")}>\n      <div className={\"hand-value \" + handValueClass}>\n        {handValue}\n\n        {(gameStatus === \"FINISHED\" || gameStatus === \"GAME_OVER\") &&\n          handValueClass === \"hand-winning\" && (\n            <span\n              className={\n                \"result-icon \" +\n                (gameStatus === \"GAME_OVER\" ? \"result-icon-big\" : \"\")\n              }\n            >\n              üèÜ\n            </span>\n          )}\n      </div>\n\n      <div className=\"cards\">\n        {cards.map((card, idx) => (\n          <div className={\"card card-\" + card.suit.symbol} key={idx}>\n            <div className=\"card-face\">\n              <div className=\"card-face-top\">\n                <div>{card.rank.symbol}</div>\n                <div className=\"emoji\">{card.suit.symbol}</div>\n              </div>\n\n              <div className=\"card-face-bottom\">\n                <div>{card.rank.symbol}</div>\n                <div className=\"emoji\">{card.suit.symbol}</div>\n              </div>\n\n              <div className=\"card-face-inner\">\n                {new Array(card.rank.value).fill().map((_, aIdx) => (\n                  <div key={aIdx} className=\"emoji\">\n                    {card.suit.symbol}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"card-back\">\n              <div className=\"card-back-inner\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","export default function LeaderboardDialog({ data, onClose }) {\r\n  return (\r\n    <div className=\"dialog-container\" onClick={onClose}>\r\n      <div className=\"dialog\">\r\n        <div className=\"dialog-title\">Leaderboard</div>\r\n        <div className=\"dialog-content\">\r\n          {data?.map((user, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n              <div style={{ marginRight: 20 }}>{user.name}</div>\r\n              <div>{user.rating}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function RoundWins({ wins, roundsToWin }) {\n  return (\n    <div className=\"round-wins\">\n      {new Array(roundsToWin).fill().map((_, idx) => (\n        <div className={\"round \" + (wins > idx ? \"round-won\" : \"\")} key={idx} />\n      ))}\n    </div>\n  );\n}\n","export const CARDS = [];\n\nexport const SUITS = [\n  {\n    id: \"HEART\",\n    symbol: \"‚ô•\",\n  },\n  {\n    id: \"DIAMOND\",\n    symbol: \"‚ô¶\",\n  },\n  {\n    id: \"SPADE\",\n    symbol: \"‚ô†\",\n  },\n  {\n    id: \"CLUB\",\n    symbol: \"‚ô£\",\n  },\n];\n\nexport const RANKS = [\n  { symbol: \"2\", value: 2 },\n  { symbol: \"3\", value: 3 },\n  { symbol: \"4\", value: 4 },\n  { symbol: \"5\", value: 5 },\n  { symbol: \"6\", value: 6 },\n  { symbol: \"7\", value: 7 },\n  { symbol: \"8\", value: 8 },\n  { symbol: \"9\", value: 9 },\n  { symbol: \"10\", value: 10 },\n  { symbol: \"J\", value: 10 },\n  { symbol: \"Q\", value: 10 },\n  { symbol: \"K\", value: 10 },\n  { symbol: \"A\", value: 1 },\n];\n\nfor (let i = 0; i < 52; i++) {\n  CARDS.push({\n    suit: SUITS[i % 4],\n    rank: RANKS[Math.floor(i / 4)],\n  });\n}\n\nexport const getDeck = () => {\n  return CARDS.slice().sort(() => Math.random() - 0.5);\n};\n\nexport const getHandValue = (hand) => {\n  // without 11's\n  let handValue = hand.reduce((acc, next) => acc + next.rank.value, 0);\n\n  const aceCount = hand.filter((card) => card.rank.symbol === \"A\").length;\n\n  for (let i = 0; i < aceCount; i++) {\n    if (handValue < 12) {\n      handValue += 10;\n    }\n  }\n\n  return handValue;\n};\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Hand from \"./Hand\";\nimport LeaderboardDialog from \"./LeaderboardDialog\";\nimport RoundWins from \"./RoundWins\";\nimport { getHandValue } from \"./utils\";\n\nconst hasLargeEmojis = navigator.userAgent.match(\n  /iphone|ipad|android|macintosh/i\n);\n\nexport default function App() {\n  const [game, setGame] = useState();\n  const [userData, setUserData] = useState();\n  const [leaderboardVisible, setLeaderboardVisible] = useState(false);\n  const [leaderboardData, setLeaderboardData] = useState();\n\n  const player1HandValue = useMemo(\n    () => game?.player1 && getHandValue(game.player1.hand),\n    [game?.player1]\n  );\n  const player2HandValue = useMemo(\n    () => game?.player2 && getHandValue(game.player2.hand),\n    [game?.player2]\n  );\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    const socket = (socketRef.current = io(process.env.REACT_APP_WS_ROOT));\n\n    socket.on(\"connect\", (e) => {\n      socket.emit(\"auth\", { secret: localStorage.getItem(\"secret\") });\n\n      socket.emit(\"get_leaderboard\");\n\n      const gameId = window.location.search.slice(1);\n      if (gameId) {\n        socket.emit(\"join_game\", { gameId });\n      } else {\n        socket.emit(\"create_game\", {});\n      }\n    });\n\n    socket.on(\"leaderboard_data\", (leaderboard) => {\n      setLeaderboardData(leaderboard);\n    });\n\n    socket.on(\"user_data\", (userData) => {\n      setUserData(userData);\n\n      localStorage.setItem(\"secret\", userData.secret);\n    });\n\n    socket.on(\"join\", (gameState) => {\n      setGame(gameState);\n\n      window.history.replaceState(null, null, \"./?\" + gameState.gameId);\n    });\n\n    socket.on(\"player_join\", (gameState) => {\n      setGame(gameState);\n    });\n\n    socket.on(\"terminated\", (e) => {});\n\n    socket.on(\"not_found\", (e) => {\n      window.history.replaceState(null, null, \"./\");\n      socket.emit(\"create_game\", {});\n    });\n\n    socket.on(\"update\", (gameState) => {\n      setGame(gameState);\n    });\n  }, []);\n\n  if (!game) {\n    return null;\n  }\n\n  return (\n    <div className={\"app \" + (hasLargeEmojis ? \"small-emojis\" : \"\")}>\n      <div className=\"app-inner\">\n        <button\n          className=\"icon-button leaderboard-button\"\n          onClick={() => {\n            socketRef.current.emit(\"get_leaderboard\");\n            setLeaderboardVisible(true);\n          }}\n        >\n          ü•á\n        </button>\n\n        <div className=\"player-portrait\">\n          {game.player2 ? (\n            <span>\n              {game.player2.name} ({game.player2.rating})\n            </span>\n          ) : (\n            <span>&nbsp;</span>\n          )}\n        </div>\n\n        <RoundWins\n          wins={game.player2?.score || 0}\n          roundsToWin={game.roundsToWin}\n        />\n\n        <Hand\n          cards={game.player2?.hand || []}\n          handValue={player2HandValue}\n          enemyHandValue={player1HandValue}\n          mirror\n          gameStatus={game.status}\n        />\n\n        <div className=\"divider\">\n          <div />\n\n          <div style={{ flex: 1 }}></div>\n\n          <div>\n            <div className=\"card\">\n              <div className=\"card-back no-anim\">\n                <div className=\"card-back-inner\"></div>\n              </div>\n            </div>\n            <div>{game.deckSize - game.deckIndex}</div>\n          </div>\n        </div>\n\n        <Hand\n          cards={game.player1?.hand || []}\n          handValue={player1HandValue}\n          enemyHandValue={player2HandValue}\n          gameStatus={game.status}\n        />\n\n        <RoundWins\n          wins={game.player1?.score || 0}\n          roundsToWin={game.roundsToWin}\n        />\n\n        <div className=\"player-portrait\">\n          <div>\n            {userData?.name} ({userData?.rating})\n          </div>\n\n          <div className=\"actions\">\n            {game.status === \"PLAYER1_TURN\" && (\n              <>\n                <button\n                  className=\"action-button hit\"\n                  onClick={() => {\n                    socketRef.current.emit(\"hit\");\n                  }}\n                >\n                  HIT\n                </button>\n\n                <button\n                  className=\"action-button stay\"\n                  onClick={() => {\n                    socketRef.current.emit(\"stay\");\n                  }}\n                >\n                  STAY\n                </button>\n              </>\n            )}\n\n            {game.status === \"FINISHED\" && (\n              <>\n                <button\n                  className=\"action-button\"\n                  onClick={() => {\n                    socketRef.current.emit(\"next_round\");\n                  }}\n                >\n                  NEXT ROUND\n                </button>\n              </>\n            )}\n\n            {game.status === \"GAME_OVER\" && (\n              <>\n                <button\n                  className=\"action-button\"\n                  onClick={() => {\n                    socketRef.current.emit(\"create_game\");\n                  }}\n                >\n                  NEW GAME\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {leaderboardVisible && (\n        <LeaderboardDialog\n          data={leaderboardData}\n          onClose={() => setLeaderboardVisible(false)}\n        />\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ndocument.body.style.background = \"center / cover no-repeat url(./bg.jpg)\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}