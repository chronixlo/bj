{"version":3,"sources":["Hand.js","RoundWins.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["Hand","handValue","enemyHandValue","cards","mirror","gameStatus","handValueClass","className","map","card","idx","suit","symbol","rank","Array","value","fill","_","aIdx","RoundWins","wins","roundsToWin","CARDS","SUITS","id","RANKS","i","push","Math","floor","getHandValue","hand","reduce","acc","next","App","useState","game","setGame","player1HandValue","useMemo","player1","player2HandValue","player2","socketRef","useRef","useEffect","socket","current","io","process","on","e","gameId","window","location","search","slice","emit","gameState","history","replaceState","score","status","style","flex","deckSize","deckIndex","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","body","background","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29fa6597.chunk.js","sourcesContent":["export default function Hand({\r\n  handValue,\r\n  enemyHandValue,\r\n  cards,\r\n  mirror,\r\n  gameStatus,\r\n}) {\r\n  const handValueClass = (() => {\r\n    if (handValue > 21) {\r\n      return \"hand-losing\";\r\n    }\r\n    if (enemyHandValue > 21) {\r\n      return \"hand-winning\";\r\n    }\r\n\r\n    if (handValue > enemyHandValue) {\r\n      return \"hand-winning\";\r\n    }\r\n    if (handValue < enemyHandValue) {\r\n      return \"hand-losing\";\r\n    }\r\n    return \"\";\r\n  })();\r\n\r\n  return (\r\n    <div className={\"hand \" + (mirror ? \"hand-mirror\" : \"\")}>\r\n      <div className={\"hand-value \" + handValueClass}>\r\n        {handValue}\r\n\r\n        {gameStatus === \"FINISHED\" && handValueClass === \"hand-winning\" && (\r\n          <span className=\"result-icon\">üèÜ</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"cards\">\r\n        {cards.map((card, idx) => (\r\n          <div className={\"card card-\" + card.suit.symbol} key={idx}>\r\n            <div className=\"card-face\">\r\n              <div className=\"card-face-top\">\r\n                <div>{card.rank.symbol}</div>\r\n                <div>{card.suit.symbol}</div>\r\n              </div>\r\n\r\n              <div className=\"card-face-bottom\">\r\n                <div>{card.rank.symbol}</div>\r\n                <div>{card.suit.symbol}</div>\r\n              </div>\r\n\r\n              <div className=\"card-face-inner\">\r\n                {new Array(card.rank.value).fill().map((_, aIdx) => (\r\n                  <div key={aIdx}>{card.suit.symbol}</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"card-back\">\r\n              <div className=\"card-back-inner\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function RoundWins({ wins, roundsToWin }) {\r\n  return (\r\n    <div className=\"round-wins\">\r\n      {new Array(roundsToWin).fill().map((_, idx) => (\r\n        <div className={\"round \" + (wins > idx ? \"round-won\" : \"\")} key={idx} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export const CARDS = [];\r\n\r\nexport const SUITS = [\r\n  {\r\n    id: \"HEART\",\r\n    symbol: \"‚ô•\",\r\n  },\r\n  {\r\n    id: \"DIAMOND\",\r\n    symbol: \"‚ô¶\",\r\n  },\r\n  {\r\n    id: \"SPADE\",\r\n    symbol: \"‚ô†\",\r\n  },\r\n  {\r\n    id: \"CLUB\",\r\n    symbol: \"‚ô£\",\r\n  },\r\n];\r\n\r\nexport const RANKS = [\r\n  { symbol: \"2\", value: 2 },\r\n  { symbol: \"3\", value: 3 },\r\n  { symbol: \"4\", value: 4 },\r\n  { symbol: \"5\", value: 5 },\r\n  { symbol: \"6\", value: 6 },\r\n  { symbol: \"7\", value: 7 },\r\n  { symbol: \"8\", value: 8 },\r\n  { symbol: \"9\", value: 9 },\r\n  { symbol: \"10\", value: 10 },\r\n  { symbol: \"J\", value: 10 },\r\n  { symbol: \"Q\", value: 10 },\r\n  { symbol: \"K\", value: 10 },\r\n  { symbol: \"A\", value: 1 },\r\n];\r\n\r\nfor (let i = 0; i < 52; i++) {\r\n  CARDS.push({\r\n    suit: SUITS[i % 4],\r\n    rank: RANKS[Math.floor(i / 4)],\r\n  });\r\n}\r\n\r\nexport const getDeck = () => {\r\n  return CARDS.slice().sort(() => Math.random() - 0.5);\r\n};\r\n\r\nexport const getHandValue = (hand) => {\r\n  return hand.reduce((acc, next) => acc + next.rank.value, 0);\r\n};\r\n","import { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Hand from \"./Hand\";\r\nimport RoundWins from \"./RoundWins\";\r\nimport { getHandValue } from \"./utils\";\r\n\r\nexport default function App() {\r\n  const [game, setGame] = useState();\r\n\r\n  const player1HandValue = useMemo(\r\n    () => game?.player1 && getHandValue(game.player1.hand),\r\n    [game?.player1]\r\n  );\r\n  const player2HandValue = useMemo(\r\n    () => game?.player2 && getHandValue(game.player2.hand),\r\n    [game?.player2]\r\n  );\r\n\r\n  const socketRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const socket = (socketRef.current = io(process.env.REACT_APP_WS_ROOT));\r\n\r\n    socket.on(\"connect\", (e) => {\r\n      const gameId = window.location.search.slice(1);\r\n      if (gameId) {\r\n        socket.emit(\"join_game\", { gameId });\r\n      } else {\r\n        socket.emit(\"create_game\", {});\r\n      }\r\n    });\r\n\r\n    socket.on(\"join\", (gameState) => {\r\n      setGame(gameState);\r\n\r\n      window.history.replaceState(null, null, \"/?\" + gameState.gameId);\r\n    });\r\n\r\n    socket.on(\"player_join\", (gameState) => {\r\n      setGame(gameState);\r\n    });\r\n\r\n    socket.on(\"terminated\", (e) => {});\r\n\r\n    socket.on(\"not_found\", (e) => {\r\n      window.history.replaceState(null, null, \"/\");\r\n      socket.emit(\"create_game\", {});\r\n    });\r\n\r\n    socket.on(\"update\", (gameState) => {\r\n      setGame(gameState);\r\n    });\r\n  }, []);\r\n\r\n  if (!game) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-inner\">\r\n        <div className=\"player-portrait\">ENEMY</div>\r\n\r\n        <RoundWins\r\n          wins={game.player2?.score || 0}\r\n          roundsToWin={game.roundsToWin}\r\n        />\r\n\r\n        <Hand\r\n          cards={game.player2?.hand || []}\r\n          handValue={player2HandValue}\r\n          enemyHandValue={player1HandValue}\r\n          mirror\r\n          gameStatus={game.status}\r\n        />\r\n\r\n        <div className=\"divider\">\r\n          <div />\r\n\r\n          <div style={{ flex: 1 }}></div>\r\n\r\n          <div>\r\n            <div className=\"card\">\r\n              <div className=\"card-back no-anim\">\r\n                <div className=\"card-back-inner\"></div>\r\n              </div>\r\n            </div>\r\n            <div>{game.deckSize - game.deckIndex}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <Hand\r\n          cards={game.player1?.hand || []}\r\n          handValue={player1HandValue}\r\n          enemyHandValue={player2HandValue}\r\n          gameStatus={game.status}\r\n        />\r\n\r\n        <RoundWins\r\n          wins={game.player1?.score || 0}\r\n          roundsToWin={game.roundsToWin}\r\n        />\r\n\r\n        <div className=\"player-portrait\">\r\n          <div className=\"actions\">\r\n            {game.status === \"PLAYER1_TURN\" && (\r\n              <>\r\n                <button\r\n                  className=\"action-button hit\"\r\n                  onClick={() => {\r\n                    socketRef.current.emit(\"hit\");\r\n                  }}\r\n                >\r\n                  HIT\r\n                </button>\r\n\r\n                <button\r\n                  className=\"action-button stay\"\r\n                  onClick={() => {\r\n                    socketRef.current.emit(\"stay\");\r\n                  }}\r\n                >\r\n                  STAY\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            {game.status === \"FINISHED\" && (\r\n              <>\r\n                <button\r\n                  className=\"action-button\"\r\n                  onClick={() => {\r\n                    socketRef.current.emit(\"next_round\");\r\n                  }}\r\n                >\r\n                  NEXT ROUND\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            {game.status === \"GAME_OVER\" && (\r\n              <>\r\n                <button\r\n                  className=\"action-button\"\r\n                  onClick={() => {\r\n                    socketRef.current.emit(\"create_game\");\r\n                  }}\r\n                >\r\n                  NEW GAME\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ndocument.body.style.background = \"center / cover no-repeat url(./bg.jpg)\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}